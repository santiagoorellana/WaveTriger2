<HTML>
<HEAD>
<TITLE>ReadMe</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<SCRIPT LANGUAGE="JavaScript">
<!--
function MM_reloadPage(init) {  //reloads the window if Nav4 resized
  if (init==true) with (navigator) {if ((appName=="Netscape")&&(parseInt(appVersion)==4)) {
    document.MM_pgW=innerWidth; document.MM_pgH=innerHeight; onresize=MM_reloadPage; }}
  else if (innerWidth!=document.MM_pgW || innerHeight!=document.MM_pgH) location.reload();
}
MM_reloadPage(true);
// -->
</SCRIPT>
</HEAD>
<BODY BGCOLOR="#FFFFFF" TEXT="#000000">
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="5" BGCOLOR="#660000">
  <TR> 
    <TD> 
      <DIV ALIGN="CENTER"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="6" COLOR="#FFFFFF"><B>Wave 
        Audio Package v1.601</B></FONT></DIV>
    </TD>
  </TR>
</TABLE>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Copyright &copy; 
  <A HREF="mailto:delphiarea.com">Kambiz R. Khojasteh</A>. All rights reserved.<BR>
  Get future package updates from <A HREF="http://www.delphiarea.com">http://www.delphiarea.com</A>.<BR>
  </FONT></P>
<TABLE BORDER="1" CELLSPACING="2" CELLPADDING="5" BORDERCOLOR="#FFFFFF" ALIGN="LEFT">
  <TR BGCOLOR="#333333" ALIGN="CENTER" VALIGN="MIDDLE"> 
    <TD NOWRAP><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Delphi 
      3 </B></FONT></TD>
    <TD NOWRAP><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Delphi 
      4</B></FONT></TD>
    <TD NOWRAP><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Delphi 
      5</B></FONT></TD>
    <TD NOWRAP><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Delphi 
      6</B></FONT></TD>
    <TD NOWRAP><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Delphi 
      7</B></FONT></TD>
  </TR>
</TABLE>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
  <BR>
  </FONT></P>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="4"><B><A NAME="DESCRIPTION"></A><BR>
  DESCRIPTION</B></FONT></P>
<P> 
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The Wave Audio 
  Package provides seven components for playing and recording of wave audio formats, 
  two components for storing wave data as Delphi resources, one audio mixer component, 
  and one high resolution multimedia timer. The package has also a set of useful 
  functions for manipulating wave audio's.</FONT></P>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The package's components 
  are:</FONT></P>
<UL>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TMultimediaTimer">TMultimediaTimer</A></B><BR>
    Is a high resolution timer.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TAudioMixer">TAudioMixer</A></B><BR>
    Provides an easy interface to manage audio mixer controls.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TWaveStorage">TWaveStorage</A></B><BR>
    Stores a single wave audio and provides access to its informational fields.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TWaveCollection">TWaveCollection</A></B><BR>
    Stores a collection of wave audio's as resource and provides access to their 
    informational fields.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TAudioPlayer">TAudioPlayer</A></B><BR>
    Plays a wave audio, which is stored in the component.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TAudioRecorder">TAudioRecorder</A></B><BR>
    Records wave audio and stores it in the component.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TStockAudioPlayer">TStockAudioPlayer</A></B><BR>
    Plays wave audio from a <A HREF="#TWaveStorage">TWaveStorage</A> or <A HREF="#TWaveCollection">TWaveCollection</A> 
    component, a stream, or a file.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TStockAudioRecorder">TStockAudioRecorder</A></B><BR>
    Records wave audio to a <A HREF="#TWaveStorage">TWaveStorage</A> or <A HREF="#TWaveCollection">TWaveCollection</A> 
    component, a stream, or a file.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TLiveAudioPlayer">TLiveAudioPlayer</A></B><BR>
    Plays wave audio from user defined buffers.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TLiveAudioRecorder">TLiveAudioRecorder</A></B><BR>
    Records wave audio to user defined buffers.</FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A HREF="#TAudioRedirector">TAudioRedirector</A></B><BR>
    Records wave audio from an input audio device and plays it back on an output 
    audio device.</FONT></LI>
</UL>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="INTERFACE"></A><BR>
  <FONT SIZE="4">INTERFACE</FONT></B></FONT></P>
<UL>
</UL>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Although for using 
  the components available in the Wave Audio package, you do not know to know 
  about the details, however for some low level descriptions I've supposed you 
  are familiar with Microsoft Multimedia terminology and API. To know more about 
  details you can study &quot;Microsoft Multimedia Programmer's Reference&quot;.</FONT></P>
<UL>
  <UL>
    <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A HREF="#DataTypes">Data 
      Types</A> </FONT></LI>
    <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A HREF="#EventTypes">Event 
      Types</A> </FONT></LI>
    <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A HREF="#ExceptionClasses">Exception 
      Classes</A> </FONT></LI>
    <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A HREF="#WaveStorageClasses">Wave 
      Storage Classes</A></FONT></LI>
    <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A HREF="#WaveAudioPlayerRecorderClasses">Wave 
      Audio Player and Recorder Classes</A></FONT></LI>
    <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A HREF="#AudioMixerClasses">Audio 
      Mixer Classes</A> </FONT></LI>
    <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A HREF="#TimerClass">Multimedia 
      Timer Class</A></FONT></LI>
    <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A HREF="#GlobalProcedures">Global 
      Procedures</A><BR>
      </FONT></LI>
  </UL>
</UL>
<UL>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="3"><B><A NAME="DataTypes"></A>DATA 
    TYPES </B></FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TPCMChannel"></A>TPCMChannel 
            = (cMono, cStereo)<BR>
            </B>Audio channels for PCM format.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TPCMSamplesPerSec"></A>TPCMSamplesPerSec 
            = (ss8000Hz, ss11025Hz, ss22050Hz, ss44100Hz, ss48000Hz);<BR>
            </B>Samples per soconds for PCM format.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TPCMBitsPerSample"></A>TPCMBitsPerSample 
            = (bs8Bit, bs16Bit);<BR>
            </B>Bits per sample for PCM format.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TPCMFormat"></A>TPCMFormat 
            = (nonePCM, Mono8Bit8000Hz, Stereo8bit8000Hz, Mono16bit8000Hz, Stereo16bit8000Hz, 
            Mono8bit11025Hz, Stereo8bit11025Hz, Mono16bit11025Hz, Stereo16bit11025Hz, 
            Mono8bit22050Hz, Stereo8bit22050Hz, Mono16bit22050Hz, Stereo16bit22050Hz, 
            Mono8bit44100Hz, Stereo8bit44100Hz, Mono16bit44100Hz, Stereo16bit44100Hz, 
            Mono8bit48000Hz, Stereo8bit48000Hz, Mono16bit48000Hz,<BR>
            Stereo16bit48000Hz);<BR>
            </B>Santandard PCM formats.<BR>
            </FONT></P>
          <TABLE WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>nonePCM</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">None 
                PCM audio format</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Mono8Bit8000Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                8.000 kHz, 8 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Stereo8bit8000Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                PCM 8.000 kHz, 8 Bit, Stereo</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Mono16bit8000Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                8.000 kHz, 16 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Stereo16bit8000Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                8.000 kHz, 16 Bit, Stereo</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Mono8bit11025Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                11.025 kHz, 8 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Stereo8bit11025Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                11.025 kHz, 8 Bit, Stereo</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Mono16bit11025Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                11.025 kHz, 16 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Stereo16bit11025Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                11.025 kHz, 16 Bit, Stereo</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Mono8bit22050Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                22.050 kHz, 8 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Stereo8bit22050Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                22.050 kHz, 8 Bit, Stereo</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Mono16bit22050Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                22.050 kHz, 16 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Stereo16bit22050Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                22.050 kHz, 16 Bit, Stereo</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Mono8bit44100Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                44.100 kHz, 8 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Stereo8bit44100Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                44.100 kHz, 8 Bit, Stereo</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Mono16bit44100Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                44.100 kHz, 16 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Stereo16bit44100Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                44.100 kHz, 16 Bit, Stereo</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Mono8bit48000Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                48.000 kHz, 8 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Stereo8bit48000Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                48.000 kHz, 8 Bit, Stereo</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Mono16bit48000Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                48.000 kHz, 16 Bit, Mono</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Stereo16bit48000Hz</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">PCM 
                48.000 kHz, 16 Bit, Stereo</FONT></TD>
            </TR>
          </TABLE>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveDeviceFormats"></A>TWaveDeviceFormats 
            = set of <A HREF="#TPCMFormat">TPCMFormat</A>;<BR>
            </B>Supported PCM formats by a wave audio device.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveOutDeviceSupport"></A>TWaveOutDeviceSupport 
            = (dsVolume, dsStereoVolume, dsPitch, dsPlaybackRate, dsPosition, 
            dsAsynchronize, dsDirectSound);<BR>
            </B>Possible features of a wave out audio device.<BR>
            </FONT></P>
          <TABLE WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>dsVolume</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Supports 
                volume control.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>dsStereoVolume</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Supports 
                separate left and right volume control.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>dsPitch</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                Supports pitch control.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>dsPlaybackRate</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Supports 
                playback rate control.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>dsPosition</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Returns 
                sample-accurate position information.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>dsAsynchronize</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                driver is asynchronous and will not block the caller thread while 
                playing a buffer.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>dsDirectSound</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Supports 
                Direct Sound.</FONT></TD>
            </TR>
          </TABLE>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B> <A NAME="TWaveOutDeviceSupports"></A>TWaveOutDeviceSupports 
            = set of <A HREF="#TWaveOutDeviceSupport">TWaveOutDeviceSupport</A>;<BR>
            </B>Supported features by a wave out audio device.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveOutOption"></A>TWaveOutOption 
            = (woSetVolume, woSetPitch, woSetPlaybackRate);<BR>
            </B>Possible options for a wave out audio device.<BR>
            </FONT></P>
          <TABLE WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>woSetVolume</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">If 
                the wave out audio device supports volume control, the volume 
                should be set by the component.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>woSetPitch</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">If 
                the wave out audio device supports pitch control, the pich should 
                be set by the component.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>woSetPlaybackRate</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                If the wave out audio device supports playback rate control, the 
                playback rate should be set by the component.</FONT></TD>
            </TR>
          </TABLE>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveOutOptions"></A>TWaveOutOptions 
            = set of <A HREF="#TWaveOutOption">TWaveOutOption</A>;<BR>
            </B>Selected options for a wave out audio device.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><A NAME="TMS2StrFormat"></A>TMS2StrFormat 
            = (msHMSh, msHMS, msMSh, msMS, msSh, msS, msAh, msA);</FONT></B><FONT SIZE="2"><BR>
            Format specifiers for milliseconds to string convertor.</FONT></FONT></P>
          <TABLE WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>msHMSh</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Hour:Minute:Second.Hunderdth</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>msHMS</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Hour:Minute:Second</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>msMSh</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                Minute:Second.Hunderdth</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>msMS</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Minute:Second</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>msSh</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Second.Hunderdth</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>msS</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Second</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>msAh</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Automatically 
                chooses the best format with hunderdth of second</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>msA</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Automatically 
                chooses the best format without hunderdth of second</FONT></TD>
            </TR>
          </TABLE>
          <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
          </FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><A NAME="TMixerControlType"></A>TMixerControlType 
            = (mcVolume, mcMute, mcSelect);</FONT></B><FONT SIZE="2"><BR>
            Audio mixer control type.</FONT></FONT></P>
          <TABLE WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">mcVolume</FONT></B></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">General 
                volume fade control.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">mcMute</FONT></B></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Mutes 
                an audio line (suppressing the data flow of the line) or allows 
                the audio data to play.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">mcSelect</FONT></B></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Restricts 
                the line selection to one source line at a time.</FONT></TD>
            </TR>
          </TABLE>
          <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
          </FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><A NAME="TMixerControlTypes"></A>TMixerControlTypes 
            = set of <A HREF="#TMixerControlType">TMixerControlType</A>;</FONT></B><FONT SIZE="2"><BR>
            Set of available audio mixer control types.</FONT></FONT></P>
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><A NAME="TMixerLineTargetType"></A>TMixerLineTargetType 
            = (tgUndefined, tgWaveOut, tgWaveIn, tgMidiOut, tgMidiIn, tgAux);</FONT></B><FONT SIZE="2"><BR>
            Target media device type associated with the audio line.</FONT></FONT></P>
          <TABLE WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>tgUndefined</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                audio line is not strictly bound to a defined media type.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>tgWaveOut</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                audio line is strictly bound to the waveform-audio output device.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>tgWaveIn</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                audio line is strictly bound to the waveform-audio input device.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>tgMidiOut</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                audio line is strictly bound to the MIDI output device.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>tgMidiIn</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                audio line is strictly bound to the MIDI input device.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>tgAux</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                audio line is strictly bound to the auxiliary device.</FONT></TD>
            </TR>
          </TABLE>
          <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
          </FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><A NAME="TMixerLineComponentType"></A>TMixerLineComponentType 
            = (cmDstUndefined, cmDstDigital, cmDstLine, cmDstMonitor, cmDstSpeakers, 
            cmDstHeadphones, cmDstTelephone, cmDstWaveIn, cmDstVoiceIn, cmSrcUndefined, 
            cmSrcDigital, cmSrcLine, cmSrcMicrophone, cmSrcSynthesizer, cmCompactDisc, 
            cmSrcTelephone, cmSrcPCSpeaker, cmSrcWaveOut, cmSrcAuxiliary, cmSrcAnalog);</FONT></B><FONT SIZE="2"><BR>
            Component type for this audio line. An application can use this information 
            to display tailored graphics or to search for a particular component.</FONT></FONT></P>
          <TABLE WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmDstUndefined</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a destination that cannot be defined by one of the standard 
                component types. A mixer device is required to use this component 
                type for line component types that have not been defined by Microsoft 
                Corporation.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmDstDigital</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a digital destination (for example, digital input to a 
                DAT or CD audio device).</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmDstLine</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a line level destination (for example, line level input 
                from a CD audio device) that will be the final recording source 
                for the analog-to-digital converter (ADC). Because most audio 
                cards for personal computers provide some sort of gain for the 
                recording audio source line, the mixer device will use the <B>cmDstWaveIn</B> 
                type.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmDstMonitor</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a destination used for a monitor.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmDstSpeakers</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is an adjustable (gain and/or attenuation) destination intended 
                to drive speakers. This is the typical component type for the 
                audio output of audio cards for personal computers.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmDstHeadphones</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is an adjustable (gain and/or attenuation) destination intended 
                to drive headphones. Most audio cards use the same audio destination 
                line for speakers and headphones, in which case the mixer device 
                simply uses the <B>cmDstSpeakers</B> type.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmDstTelephone</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a destination that will be routed to a telephone line.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmDstWaveIn</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a destination that will be the final recording source 
                for the waveform-audio input (ADC). This line typically provides 
                some sort of gain or attenuation. This is the typical component 
                type for the recording line of most audio cards for personal computers.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmDstVoiceIn</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a destination that will be the final recording source 
                for voice input. This component type is exactly like <B>cmDstWaveIn</B> 
                but is intended specifically for settings used during voice recording/recognition. 
                Support for this line is optional for a mixer device. Many mixer 
                devices provide only <B>cmDstWaveIn</B>.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcUndefined</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a source that cannot be defined by one of the standard 
                component types. A mixer device is required to use this component 
                type for line component types that have not been defined by Microsoft 
                Corporation.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcDigital</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a digital source (for example, digital output from a DAT 
                or audio CD).</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcLine</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a line-level source (for example, line-level input from 
                an external stereo) that can be used as an optional recording 
                source. Because most audio cards for personal computers provide 
                some sort of gain for the recording source line, the mixer device 
                will use the <B>cmSrcAuxiliary</B> type.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcMicrophone</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a microphone recording source. Most audio cards for personal 
                computers provide at least two types of recording sources: an 
                auxiliary audio line and microphone input. A microphone audio 
                line typically provides some sort of gain. Audio cards that use 
                a single input for use with a microphone or auxiliary audio line 
                should use the <B>cmSrcMicrophone</B> component type.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcSynthesizer</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a source originating from the output of an internal synthesizer. 
                Most audio cards for personal computers provide some sort of MIDI 
                synthesizer (for example, an Adlib&reg;-compatible or OPL/3 FM 
                synthesizer).</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmCompactDisc</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a source originating from the output of an internal audio 
                CD. This component type is provided for audio cards that provide 
                an audio source line intended to be connected to an audio CD (or 
                CD-ROM playing an audio CD).</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcTelephone</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a source originating from an incoming telephone line.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcPCSpeaker</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a source originating from personal computer speaker. Several 
                audio cards for personal computers provide the ability to mix 
                what would typically be played on the internal speaker with the 
                output of an audio card. Some audio cards support the ability 
                to use this output as a recording source.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcWaveOut</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a source originating from the waveform-audio output digital-to-analog 
                converter (DAC). Most audio cards for personal computers provide 
                this component type as a source to the <B>cmDstSpeakers</B> destination. 
                Some cards also allow this source to be routed to the <B>cmDstWaveIn</B> 
                destination.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcAuxiliary</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is a source originating from the auxiliary audio line. This 
                line type is intended as a source with gain or attenuation that 
                can be routed to the <B>cmDstSpeakers</B> destination and/or recorded 
                from the <B>cmDstWaveIn</B> destination.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>cmSrcAnalog</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is an analog source (for example, analog output from a video-cassette 
                tape).</FONT></TD>
            </TR>
          </TABLE>
          <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
          </FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><A NAME="TMixerLineFlags"></A>TMixerLineFlags 
            = set of (lfActive, lfDisconnected, lfSource);</FONT></B><FONT SIZE="2"><BR>
            Status and support flags for the audio line.</FONT></FONT></P>
          <TABLE WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>lfActive</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is active. An active line indicates that a signal is probably 
                passing through the line.</FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>lfDisconnected</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is disconnected. A disconnected line's associated controls 
                can still be modified, but the changes have no effect until the 
                line is connected. </FONT></TD>
            </TR>
            <TR> 
              <TD WIDTH="15%" VALIGN="TOP"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>lfSource</B></FONT></TD>
              <TD WIDTH="20">&nbsp;</TD>
              <TD><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Audio 
                line is an audio source line associated with a single audio destination 
                line. If this flag is not set, this line is an audio destination 
                line associated with zero or more audio source lines.</FONT></TD>
            </TR>
          </TABLE>
          <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
          </FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><BR>
    </FONT></B> <BR>
    </FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><A NAME="EventTypes"></A><B><FONT SIZE="3">EVENT 
    TYPES </FONT><FONT SIZE="2"><BR>
    <BR>
    </FONT></B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="TWaveAudioEvent"></A>TWaveAudioEvent 
            = procedure(Sender: TObject) of object;</B><BR>
            This event is used for wave audio events that do not require parameters.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B> <A NAME="TWaveAudioGetFormatEvent"></A>TWaveAudioGetFormatEvent 
            = procedure(Sender: TObject; var pWaveFormat: PWaveFormatEx; var FreeIt: 
            Boolean) of object;<BR>
            </B>This event is used for wave audio events that get wave audio format 
            from their handler. The handler should set pWaveFormat parameter to 
            the address of a TWaveFormatEx structure. If the FreeIt parameter 
            set to True, the memory allocated for wave format structure will be 
            freed automatically, when it is no more needed.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B> <A NAME="TWaveAudioGetDataEvent"></A>TWaveAudioGetDataEvent 
            = function(Sender: TObject; const Buffer: Pointer; BufferSize: DWORD; 
            var NumLoops: DWORD): DWORD of object;<BR>
            </B>This event is used for wave audio events that get the wave audio 
            data for playback. The handler should fill the buffer specified by 
            the Buffer parameter with the wave data. The maximum data that can 
            be written in the buffer is specified by the BufferSize parameter. 
            The handler must return the number of bytes actually written in the 
            buffer. Optionally the handler can determine the number of times the 
            buffer should be played by using the NumLoop parameter.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B> <A NAME="TWaveAudioGetDataPtrEvent"></A>TWaveAudioGetDataPtrEvent 
            = function(Sender: TObject; var Buffer: Pointer; var NumLoops: DWORD; 
            var FreeIt: Boolean): DWORD of object;<BR>
            </B>This event is used for wave audio events that get the wave audio 
            data for playback. The handler should set the pointer specified by 
            the Buffer to the address of wave data and return the size of the 
            buffer. If the FreeIt parameter set to True, the component will automatically 
            free the memory allocated for buffer. Optionally the handler can determine 
            the number of times the buffer should be played by using the NumLoop 
            parameter.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="TWaveAudioDataReadyEvent"></A>TWaveAudioDataReadyEvent 
          = procedure(Sender: TObject; const Buffer: Pointer; BufferSize: DWORD; 
          var FreeIt: Boolean) of object;<BR>
          </B>This event is used for wave audio events that informs the caller 
          about the recorded wave audio data. The wave data stored in buffer specified 
          by the Buffer parameter, and the size of the actual data in the buffer 
          is specified by the BufferSize parameter. If the FreeIt parameter set 
          to True, the component will release the memory allocated for the buffer, 
          otherwise your application must release it. </FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="TWaveAudioLevelEvent"></A>TWaveAudioLevelEvent 
          = procedure(Sender: TObject; Level: Integer) of object;<BR>
          </B>This event is used for wave audio events that informs the caller 
          about the peak level of the audio buffer in percent.</FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="TWaveAudioFilterEvent"></A>TWaveAudioFilterEvent 
          = procedure(Sender: TObject; const Buffer: Pointer; BufferSize: DWORD) 
          of object;<BR>
          </B>This event is used for wave audio events that offers to the caller 
          to filter wave data. The wave data stored in the buffer specified by 
          the Buffer parameter, and the size of the actual data in the buffer 
          is specified by the BufferSize parameter. The event handler only can 
          change the data, not the size of the data.</FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="TMixerLineNotifyEvent"></A>TMixerLineNotifyEvent 
          = procedure(Sender: TObject; MixerLine: <A HREF="#TAudioMixerLine">TAudioMixerLine</A>) 
          of object;<BR>
          </B>This event notifies the application that the state of an audio line 
          has changed. </FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="TMixerControlNotifyEvent"></A>TMixerControlNotifyEvent 
          = procedure(Sender: TObject; MixerLine: <A HREF="#TAudioMixerLine">TAudioMixerLine</A>; 
          ControlType: <A HREF="#TMixerControlType">TMixerControlType</A>) of 
          object;<BR>
          </B>This event notifies the application that the state of a control 
          associated with an audio line has changed. </FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><BR>
    </FONT></B> <BR>
    </FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="3"><A NAME="ExceptionClasses"></A>EXCEPTION 
    CLASSES </FONT><FONT SIZE="2"><BR>
    <BR>
    </FONT></B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="EWaveAudioError"></A>EWaveAudioError 
          = class(Exception)<BR>
          </B>This class is the base exception class for wave audio exceptions.</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><BR>
    </B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="EWaveAudioSysError"></A>EWaveAudioSysError 
          = class(<A HREF="#EWaveAudioError">EWaveAudioError</A>)<BR>
          </B>This exception is raised if the operating system returns an error 
          code for a wave audio device. The exception dialog contains the system 
          message associated with the error. </FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><BR>
    </B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="EWaveAudioInvalidOperation"></A>EWaveAudioInvalidOperation 
          = class(<A HREF="#EWaveAudioError">EWaveAudioError</A>)<BR>
          </B>This exception is raised if the when a component receives a request 
          for an invalid operation. For example, if an application attempts to 
          open an already open wave audio device, or change its wave format an 
          EWaveAudioInvalidOperation exception is raised.</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><BR>
    </FONT></B> <BR>
    </FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="3"><A NAME="WaveStorageClasses"></A>WAVE 
    STORAGE CLASSES</FONT><FONT SIZE="2"><BR>
    <BR>
    </FONT></B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWave"></A>TWave 
            = class(TMemoryStream);<BR>
            </B>This class encapsulates a wave audio as a Delphi stream and provides 
            easy access to its informational fields.</FONT></P>
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties </B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>AudioFormat: 
                Strings; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the string description of the wave format.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>BitRate: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the bit rate of the wave audio in kbps (kilo bits per 
                second). </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Data: 
                Pointer; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><B><BR>
                </B>Points to the wave data samples.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DataSize: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><B><BR>
                </B>Indicates the size of wave data in bytes.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>DataOffset: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the offset of wave data from the begining of the stream.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Length: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the lenght of the wave in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>PeakLevel: 
                Integer; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><B><BR>
                </B>Indicates the peak level of the volume for the wave audio 
                in percent.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>PCMFormat: 
                <A HREF="#TPCMFormat">TPCMFormat</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the standard PCM format of the wave.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Valid: 
                Boolean ; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates whether the wave format is valid.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>WaveFormat: 
                PWaveFormatEx; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Pointer to the wave format structure of the wave. Although the 
                fields of wave format structure is not read-only, however you 
                must not change them.</FONT></TD>
            </TR>
          </TABLE>
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Event</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>OnChange: 
                TNotifyEvent;</B> <BR>
                Occurs when the content of the stream is changed.</FONT></TD>
            </TR>
          </TABLE>
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Method</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                ChangeVolume(Percent: Integer): Boolean;</B><BR>
                Increases or decreases the volume of the wave audio by the specified 
                percentage (PCM format only).</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><FONT COLOR="#FF0000"><B> 
                </B></FONT><B>function ConvertTo(const pTargetWaveFormat: PWaveFormatEx): 
                Boolean;</B> <BR>
                Converts the wave audio to the specified format. If the function 
                succeeds to convert the wave, it returns True, otherwise it returns 
                False. For more information, please read <A HREF="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_multistep_format_conversion.asp">Multistep 
                Format Conversion</A> on MSDN.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><FONT COLOR="#FF0000"><B> 
                </B></FONT><B>function ConvertToPCM(TargetFormat: <A HREF="#TPCMFormat">TPCMFormat</A>): 
                Boolean;</B> <BR>
                Converts the wave audio to the specified PCM format. If the function 
                succeeds to convert the wave, it returns True, otherwise it returns 
                False.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">procedure 
                Crop;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">If 
                the stream size is more than the actual wave audio size, this 
                method truncates the size to the actual size.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                Delete(Pos: DWORD; Len: DWORD): Boolean;</B><BR>
                Deletes a portion of the wave audio from the position specified 
                by the Pos parameter in milliseconds, and by the length specified 
                by the Len parameter in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                Equals(</B><B>Wave: <A HREF="#twAVE">TWave</A>): Boolean;</B><BR>
                Returnes True if the content of the wave object specified by the 
                Wave parameter equals to this object.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                Insert(Pos: DWORD; Wave: <A HREF="#twAVE">TWave</A>): Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Inserts 
                another wave audio specified by the Wave parameter at the position 
                specified by the Pos parameter in milliseconds. The audio format 
                of the waves should be identical.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> 
                <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                  InsertSilence(Pos: DWORD; Len: DWORD): Boolean;</B><BR>
                  Inserts silence at the position specified by the Pos parameter 
                  in milliseconds, and by the duration specified by the Len parameter 
                  in milliseconds. The audio format of the wave should be PCM 
                  format.</FONT> </P>
              </TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                Invert: Boolean;</B><BR>
                Inverts the wave audio (PCM format only).</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> 
                <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                  SameFormat(Wave: <A HREF="#twAVE">TWave</A>): Boolean;<BR>
                  </B>Returnes True if the audio format of the wave object specified 
                  by the Wave parameter equals to this object.</FONT></P>
              </TD>
            </TR>
          </TABLE>
          <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
          </FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TCustomWaveStorage"></A>TCustomWaveStorage 
            = class(TComponent);</B></FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><SUP> 
            (Abstract)</SUP></FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><BR>
            </B>This class is the base class for wave storage classes.</FONT></P>
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Property</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B> 
                property WaveStream[Index: Integer]: TStream; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Returns the wave stream associated to the spcified index.</FONT></TD>
            </TR>
          </TABLE>
          <P></P>
          <P> 
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Method</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                Equals(Another: TCustomWaveStorage): Boolean;<BR>
                </B>Returnes True if the content of the another wave storage object 
                specified by the Another parameter equals to this object.</FONT></TD>
            </TR>
          </TABLE>
          <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
          </FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveStorage"></A>TWaveStorage 
            = class(<A HREF="#TCustomWaveStorage">TCustomWaveStorage</A>);</B></FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
            <FONT SIZE="2">This components stores one single wave audio.</FONT></FONT></P>
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Property</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                <B>Wave: <A HREF="#TWave">TWave</A>;</B><BR>
                Specifies the wave audio data.</FONT></TD>
            </TR>
          </TABLE>
          <P></P>
          <P> 
          <P></P>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveCollection"></A>TWaveCollection 
            = class(<A HREF="#TCustomWaveStorage">TCustomWaveStorage</A>);</B></FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
            <FONT SIZE="2">This components stores multiple wave audio's.</FONT></FONT></P>
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Property</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                <B>Waves: <A HREF="#TWaveItems">TWaveItems</A>;</B><BR>
                The collection of wave audio data.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Methods</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                <B>function ExportWaveNames(const List: TStrings): Integer;</B><BR>
                Fills the list with the name of wave audio's stored in the component, 
                and returns the number of added items to the list.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                IndexOfName(const AName: String): Integer;</B><BR>
                Returns the index of the wave audio in the collection by its name.</FONT></TD>
            </TR>
          </TABLE>
          <P></P>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <BR>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveItems"></A>TWaveItems 
            = class(TCollection);</B></FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
            <FONT SIZE="2">This class is a collection of wave audio data.</FONT></FONT></P>
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Property</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                <B>property Items[Index: Integer]: <A HREF="#TWaveItem">TWaveItem</A>; 
                </B><FONT COLOR="#990000"><SUP>(Default)</SUP></FONT><BR>
                Determines the collection items.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Methods</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                <B>function Add: <A HREF="#TWaveItem">TWaveItem</A>;</B><BR>
                Adds a new item to the collection, and returns the item.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                Insert(Index: Integer): <A HREF="#TWaveItem">TWaveItem</A>;</B><BR>
                Inserts a new item to the collection at the specified index, and 
                returns the item.</FONT></TD>
            </TR>
          </TABLE>
          <P></P>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveItem"></A>TWaveItem 
            = class(TCollectionItem);</B></FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
            <FONT SIZE="2">This class reperesents an item of wave audio collection.</FONT></FONT></P>
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                <B>Wave: <A HREF="#TWave">TWave</A>;</B><BR>
                Specifies the wave audio data.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Name: 
                String; </B><BR>
                Stores the name of the item.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Tag: 
                Integer;</B> <BR>
                Stores an integer value as part of the item. </FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Methods</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                <B>function Add: <A HREF="#TWaveItem">TWaveItem</A>;</B><BR>
                Adds a new item to the collection, and returns the item.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                Insert(Index: Integer): <A HREF="#TWaveItem">TWaveItem</A>;</B><BR>
                Inserts a new item to the collection at the specified index, and 
                returns the item.</FONT></TD>
            </TR>
          </TABLE>
          <P></P>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><BR>
    </FONT></B> <BR>
    </FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="3"><A NAME="WaveAudioPlayerRecorderClasses"></A>WAVE 
    AUDIO PLAYER AND RECORDER CLASSES<BR>
    </FONT></B><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveAudioIO"></A>TWaveAudioIO 
            = class(TComponent);</B></FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><SUP> 
            (Abstract)</SUP></FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><BR>
            </B>The base abstract class for both wave audio player and recorder 
            components.</FONT></P>
          <P></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Methods</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>function 
                Query(pWaveFormat: PWaveFormatEx): Boolean;<BR>
                </B>Returnes true if the device supports the wave format specified 
                by the pWaveFormat parameter.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                QueryPCM(PCMFormat: <A HREF="#TPCMFormat">TPCMFormat</A>): Boolean; 
                </B><BR>
                Returns true if the device supports the PCM wave format specified 
                by the PCMFormat parameter.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><A NAME="WaitForStart"></A>procedure 
                WaitForStart;</FONT></B><FONT SIZE="2"><BR>
                Blockes the caller thread until the audio device starts its operation. 
                </FONT></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2">procedure 
                WaitForStop;</FONT></B><FONT SIZE="2"><BR>
                Blockes the caller thread until the audio device completes its 
                operation and stops.</FONT></FONT></TD>
            </TR>
          </TABLE>
          <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
          </FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><BR>
    </B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveAudioOut"></A>TWaveAudioOut 
            = class(<A HREF="#TWaveAudioIO">TWaveAudioIO</A>);</B></FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><SUP> 
            (Abstract)</SUP></FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><BR>
            </B>The base abstract class for wave audio player components.</FONT></P>
          <P></P>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><BR>
    </B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TWaveAudioIn"></A>TWaveAudioIn 
            = class(<A HREF="#TWaveAudioIO">TWaveAudioIO</A>);</B></FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><SUP> 
            (Abstract)</SUP></FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><BR>
            </B>The base abstract class for wave audio recorder components.</FONT></P>
          <P></P>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TAudioPlayer"></A>TAudioPlayer 
            = class(<A HREF="#TWaveAudioOut">TWaveAudioOut</A>);<BR>
            </B>This component stores a wave audio and plays it on the specified 
            wave audio output device.<B><BR>
            </B></FONT></P>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Active: 
                Boolean;<BR>
                </B>When set to True, the wave audio output device will be opened, 
                and audio playback starts.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Async: 
                Boolean;<BR>
                </B>Indicates whether the audio events occur in a separate thread.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferCount: 
                WORD;<BR>
                </B>Determines the number of data buffers.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferLength: 
                WORD; <BR>
                </B>Determines the size of each data buffer in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceID: 
                DWORD;<BR>
                </B>Specifies the identifier of wave audio output device. You 
                can use WAVE_MAPPER (default value) instead of a device identifier. 
                In this case, the component seleects a wave audio output device 
                capable of playing the specified wave format.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceFormats: 
                <A HREF="#TWaveDeviceFormats">TWaveDeviceFormats</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates wave audio formats, which the selected wave audio output 
                device supports.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceName: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the freindly name of the selected wave audio output 
                device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceSupports: 
                <A HREF="#TWaveOutDeviceSupports">TWaveOutDeviceSupports</A>; 
                </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the supported features by the selected wave audio output 
                device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>NumDevs: 
                DWORD</B><B>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the number of available wave audio output devices.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastError: 
                MMRESULT; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the last system error code. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastErrorText: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the description of the last system error.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Options: 
                <A HREF="#TWaveOutOptions">TWaveOutOptions</A>;<BR>
                </B>Determines whether the component should initialize volume, 
                pitch, and playback rate of the opened wave out audio device with 
                their respective properties.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Position: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the current position of playing audio in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Paused: 
                Boolean;<BR>
                </B>When set to True, audio playback on the opened wave audio 
                output device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Pitch: 
                Double;<BR>
                </B>Specifies the pitch for the opened wave audio output device. 
                </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>PlaybackRate: 
                Double;<BR>
                </B>Specifies the playback rate for the opened wave audio output 
                device. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Volume: 
                WORD; <BR>
                </B>Specifies the volume in percent for both left and right channels 
                of the opened wave audio output device. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Wave: 
                <A HREF="#TWave">TWave</A>;<BR>
                </B>Stores the wave audio that will be played.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Events</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnActivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is opened.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnDeactivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is closed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnPause: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnResume: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is resumed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnError: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;</B><BR>
                Occurs when a system error is encountered. When this property 
                is not assigned and a system error occurs, the component raises 
                an <A HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</A> 
                exception.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnLevel: 
                <A HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</A>;</B><BR>
                If the audio format is a PCM format, this event occurs just before 
                the wave data buffer sends to the audio device. The event notifies 
                the volume peak level of the data buffer, so a smaller buffer 
                length provides a more accurate notification mechanism.</FONT></TD>
            </TR>
          </TABLE>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TStockAudioPlayer"></A>TStockAudioPlayer 
            = class(<A HREF="#TWaveAudioOut">TWaveAudioOut</A>);<BR>
            </B>This component plays a wave audio from a file, stream, resource, 
            or a <A HREF="#TCustomWaveStorage">TCustomWaveStorage</A> on the specified 
            wave audio output device.<B><BR>
            </B></FONT></P>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Active: 
                Boolean;<BR>
                </B>When set to True, the wave audio output device will be opened, 
                and audio playback starts. The component gets the wave audio that 
                will be played from the <A HREF="#TCustomWaveStorage">TCustomWaveStorage</A> 
                component specified by the <A HREF="#OutStock">Stock</A> property.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Async: 
                Boolean;<BR>
                </B>Indicates whether the audio events occur in a separate thread.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferCount: 
                WORD;<BR>
                </B>Determines the number of data buffers.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferLength: 
                WORD; <BR>
                </B>Determines the size of each data buffer in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceID: 
                DWORD;<BR>
                </B>Specifies the identifier of wave audio output device. You 
                can use WAVE_MAPPER (default value) instead of a device identifier. 
                In this case, the component seleects a wave audio output device 
                capable of playing the specified wave format.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceFormats: 
                <A HREF="#TWaveDeviceFormats">TWaveDeviceFormats</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates wave audio formats, which the selected wave audio output 
                device supports.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceName: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the freindly name of the selected wave audio output 
                device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceSupports: 
                <A HREF="#TWaveOutDeviceSupports">TWaveOutDeviceSupports</A>; 
                </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the supported features by the selected wave audio output 
                device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>NumDevs: 
                DWORD</B><B>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the number of available wave audio output devices.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastError: 
                MMRESULT; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the last system error code. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastErrorText: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the description of the last system error.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Options: 
                <A HREF="#TWaveOutOptions">TWaveOutOptions</A>;<BR>
                </B>Determines whether the component should initialize volume, 
                pitch, and playback rate of the opened wave out audio device with 
                their respective properties.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Position: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the current position of playing audio in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Paused: 
                Boolean;<BR>
                </B>When set to True, playback on the opened wave audio output 
                device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Pitch: 
                Double;<BR>
                </B>Specifies the pitch for the opened wave audio output device. 
                </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>PlaybackRate: 
                Double;<BR>
                </B>Specifies the playback rate for the opened wave audio output 
                device. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="OutStock"></A>Stock: 
                <A HREF="#TCustomWaveStorage">TCustomWaveStorage</A>;<BR>
                </B>Specfies the wave storage that shoud be used as source of 
                data for the component.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Volume: 
                WORD; <BR>
                </B>Specifies the volume in percent for both left and right channels 
                of the opened wave audio output device. </FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Events</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnActivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is opened.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnDeactivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is closed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnPause: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnResume: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is resumed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnError: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;</B><BR>
                Occurs when a system error is encountered. When this property 
                is not assigned and a system error occurs, the component raises 
                an <A HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</A> 
                exception.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnLevel: 
                <A HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</A>;</B><BR>
                If the audio format is a PCM format, this event occurs just before 
                the wave data buffer sends to the audio device. The event notifies 
                the volume peak level of the data buffer, so a smaller buffer 
                length provides a more accurate notification mechanism.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Methods</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                function PlayStream(AStream: TStream): Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays 
                the wave audio stored in the stream specified by the AStream parameter. 
                The function returns True on success, otherwise it returns false.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                PlayFile(const FileName: String): Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays 
                the wave audio file specified by the FileName parameter. The function 
                returns True on success, otherwise it returns false. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                PlayResName(Instance: THandle; const ResName: String): Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays 
                the wave audio stored as a resource in the module specified by 
                the Instance parameter, and with the resource name specified by 
                ResName parameter. The function returns True on success, otherwise 
                it returns false.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                PlayResID(Instance: THandle; ResID: Integer): Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays 
                the wave audio stored as a resource in the module specified by 
                the Instance parameter, and with the resource ID specified by 
                ResID parameter. The function returns True on success, otherwise 
                it returns false. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                PlayStock(Index: Integer): Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Plays 
                the wave audio stored in the <A HREF="#TCustomWaveStorage">TCustomWaveStorage</A> 
                specified by the <A HREF="#OutStock">Stock</A> property. If the 
                component assigned to the <A HREF="#OutStock">Stock</A> property 
                is a multi-storage component, the Index parameter specifies the 
                storage's index, otherwise the parameter will be ignored. The 
                function returns True on success, otherwise it returns false. 
                </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                Stop: Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Stops 
                the current playback. The function returns True on success, otherwise 
                it returns false. </FONT></TD>
            </TR>
          </TABLE>
          <P> 
          <P> 
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TLiveAudioPlayer"></A>TLiveAudioPlayer 
            = class(<A HREF="#TWaveAudioOut">TWaveAudioOut</A>);</B></FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><BR>
            </B>This component plays wave audio from a user defined buffer on 
            the specified wave audio output device.<B><BR>
            </B></FONT></P>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Active: 
                Boolean;<BR>
                </B>When set to True, the wave audio output device will be opened, 
                and audio playback starts.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Async: 
                Boolean;<BR>
                </B>Indicates whether the audio events occur in a separate thread.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferCount: 
                WORD;<BR>
                </B>Determines the number of data buffers.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferLength: 
                WORD; <BR>
                </B>Determines the size of each data buffer in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="OutBufferInternally"></A>BufferInternally: 
                Boolean;<BR>
                </B>If this property is True, the component allocates the memory 
                required for the audio buffers and generates <A HREF="#OutOnData">OnData</A> 
                events to fill them. If this property is False, the component 
                generates <A HREF="#OutOnDataPtr">OnDataPtr</A> events to get 
                audio buffers provided by the application.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceID: 
                DWORD;<BR>
                </B>Specifies the identifier of wave audio output device. You 
                can use WAVE_MAPPER (default value) instead of a device identifier. 
                In this case, the component seleects a wave audio output device 
                capable of playing the specified wave format.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceFormats: 
                <A HREF="#TWaveDeviceFormats">TWaveDeviceFormats</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates wave audio formats, which the selected wave audio output 
                device supports.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceName: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the freindly name of the selected wave audio output 
                device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceSupports: 
                <A HREF="#TWaveOutDeviceSupports">TWaveOutDeviceSupports</A>; 
                </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the supported features by the selected wave audio output 
                device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>NumDevs: 
                DWORD</B><B>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the number of available wave audio output devices.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastError: 
                MMRESULT; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the last system error code. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastErrorText: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the description of the last system error.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Options: 
                <A HREF="#TWaveOutOptions">TWaveOutOptions</A>;<BR>
                </B>Determines whether the component should initialize volume, 
                pitch, and playback rate of the opened wave out audio device with 
                their respective properties.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="OutPCMFormat"></A>PCMFormat: 
                <A HREF="#TPCMFormat">TPCMFormat</A>;</B><BR>
                Specifies the format of wave audio, which is going to be supplied 
                to the component. If this property set to <A HREF="#TPCMFormat">nonePCM</A>, 
                the component generates one <A HREF="#OutOnFormat">OnFormat</A> 
                event to get the wave audio format. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Position: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the current position of playing audio in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Paused: 
                Boolean;<BR>
                </B>When set to True, audio playback on the opened wave audio 
                output device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Pitch: 
                Double;<BR>
                </B>Specifies the pitch for the opened wave audio output device. 
                </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>PlaybackRate: 
                Double;<BR>
                </B>Specifies the playback rate for the opened wave audio output 
                device. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Volume: 
                WORD; <BR>
                </B>Specifies the volume in percent for both left and right channels 
                of the opened wave audio output device. </FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Events</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnActivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is opened.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnDeactivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is closed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnPause: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnResume: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio output device is resumed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnError: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;</B><BR>
                Occurs when a system error is encountered. When this property 
                is not assigned and a system error occurs, the component raises 
                an <A HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</A> 
                exception.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnLevel: 
                <A HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</A>;</B><BR>
                If the audio format is a PCM format, this event occurs just before 
                the wave data buffer sends to the audio device. The event notifies 
                the volume peak level of the data buffer, so a smaller buffer 
                length provides a more accurate notification mechanism.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                <A NAME="OutOnFormat"></A><B>OnFormat: <A HREF="#TWaveAudioGetFormatEvent">TWaveAudioGetFormatEvent</A>;</B><BR>
                Occurs when the <A HREF="#OutPCMFormat">PCMFormat</A> property 
                set to <A HREF="#TPCMFormat">nonePCM</A> and component needs to 
                know about the format of the wave audio data.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A NAME="OutOnData"></A><B>OnData: 
                <A HREF="#TWaveAudioGetDataEvent">TWaveAudioGetDataEvent</A>;</B><BR>
                Occurs when the <A HREF="#OutBufferInternally">BufferInternally</A> 
                property set to True and component needs an audio data buffer 
                to be filled. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A NAME="OutOnDataPtr"></A><B>OnDataPtr: 
                <A HREF="#TWaveAudioGetDataPtrEvent">TWaveAudioGetDataPtrEvent</A>;</B><BR>
                Occurs when the <A HREF="#OutBufferInternally">BufferInternally</A> 
                property set to False and component needs an audio data buffer. 
                </FONT></TD>
            </TR>
          </TABLE>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TAudioRecorder"></A>TAudioRecorder 
            = class(<A HREF="#TWaveAudioIn">TWaveAudioIn</A>);<BR>
            </B>This component records audio from the specified wave audio input 
            device, and stores it as one of its properties.<B><BR>
            </B></FONT></P>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Active: 
                Boolean;<BR>
                </B>When set to True, the wave audio input device will be opened, 
                and audio recording starts.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Async: 
                Boolean;<BR>
                </B>Indicates whether the audio events occur in a separate thread.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferCount: 
                WORD;<BR>
                </B>Determines the number of data buffers.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferLength: 
                WORD; <BR>
                </B>Determines the size of each data buffer in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceID: 
                DWORD;<BR>
                </B>Specifies the identifier of wave audio input device. You can 
                use WAVE_MAPPER (default value) instead of a device identifier. 
                In this case, the component seleects a wave audio input device 
                capable of recording with the specified wave format.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceFormats: 
                <A HREF="#TWaveDeviceFormats">TWaveDeviceFormats</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates wave audio formats, which the selected wave audio input 
                device supports.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceName: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the freindly name of the selected wave audio input device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>NumDevs: 
                DWORD</B><B>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the number of available wave audio input devices.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastError: 
                MMRESULT; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the last system error code. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastErrorText: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the description of the last system error.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="In1PCMFormat"></A>PCMFormat: 
                <A HREF="#TPCMFormat">TPCMFormat</A>;</B><BR>
                Specifies the format of wave audio, which is going to be recorded. 
                If this property set to <A HREF="#TPCMFormat">nonePCM</A>, the 
                component generates one <A HREF="#In1OnFormat">OnFormat</A> event 
                to get the wave audio format. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Position: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the current position of recorded audio in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Paused: 
                Boolean;<BR>
                </B>When set to True, audio recording on the opened wave audio 
                input device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Wave: 
                <A HREF="#TWave">TWave</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Stores the recorded wave audio.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Events</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnActivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is opened.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnDeactivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is closed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnPause: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnResume: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is resumed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnError: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;</B><BR>
                Occurs when a system error is encountered. When this property 
                is not assigned and a system error occurs, the component raises 
                an <A HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</A> 
                exception.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnLevel: 
                <A HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</A>;</B><BR>
                If the audio format is a PCM format, this event occurs just after 
                the audio device is filled a data buffer. The event notifies the 
                volume peak level of the data buffer, so a smaller buffer length 
                provides a more accurate notification mechanism.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A NAME="In1OnFormat"></A><B>OnFormat: 
                <A HREF="#TWaveAudioGetFormatEvent">TWaveAudioGetFormatEvent</A>;</B><BR>
                Occurs when the <A HREF="#In1PCMFormat">PCMFormat</A> property 
                set to <A HREF="#TPCMFormat">nonePCM</A> and component needs to 
                know about the format of the wave audio, which is going to be 
                recorded.</FONT></TD>
            </TR>
          </TABLE>
          <P> 
          <P> 
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TStockAudioRecorder"></A>TStockAudioRecorder 
            = class(<A HREF="#TWaveAudioIn">TWaveAudioIn</A>);<BR>
            </B>This component records audio from the specified wave audio input 
            device, and saves in a file, stream, or a <A HREF="#TCustomWaveStorage">TCustomWaveStorage.</A></FONT></P>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Active: 
                Boolean;<BR>
                </B>When set to True, the wave audio input device will be opened, 
                and audio recording starts. The recorded wave audio will be stored 
                in the <A HREF="#TCustomWaveStorage">TCustomWaveStorage</A> component 
                specified by the <A HREF="#InStock">Stock</A> property.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Async: 
                Boolean;<BR>
                </B>Indicates whether the audio events occur in a separate thread.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferCount: 
                WORD;<BR>
                </B>Determines the number of data buffers.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferLength: 
                WORD; <BR>
                </B>Determines the size of each data buffer in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceID: 
                DWORD;<BR>
                </B>Specifies the identifier of wave audio input device. You can 
                use WAVE_MAPPER (default value) instead of a device identifier. 
                In this case, the component seleects a wave audio input device 
                capable of recording with the specified wave format.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceFormats: 
                <A HREF="#TWaveDeviceFormats">TWaveDeviceFormats</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates wave audio formats, which the selected wave audio input 
                device supports.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceName: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the freindly name of the selected wave audio input device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>NumDevs: 
                DWORD</B><B>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the number of available wave audio input devices.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastError: 
                MMRESULT; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the last system error code. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastErrorText: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the description of the last system error.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="In2PCMFormat"></A>PCMFormat: 
                <A HREF="#TPCMFormat">TPCMFormat</A>;</B><BR>
                Specifies the format of wave audio, which is going to be recorded. 
                If this property set to <A HREF="#TPCMFormat">nonePCM</A>, the 
                component generates one <A HREF="#In2OnFormat">OnFormat</A> event 
                to get the wave audio format. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Position: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the current position of recorded audio in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Paused: 
                Boolean;<BR>
                </B>When set to True, audio recording on the opened wave audio 
                input device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="InStock"></A>Stock: 
                <A HREF="#TCustomWaveStorage">TCustomWaveStorage</A>;</B><BR>
                Specfies the wave storage that recorded data will be saved in.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Events</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnActivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is opened.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnDeactivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is closed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnPause: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnResume: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is resumed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnError: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;</B><BR>
                Occurs when a system error is encountered. When this property 
                is not assigned and a system error occurs, the component raises 
                an <A HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</A> 
                exception.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnLevel: 
                <A HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</A>;</B><BR>
                If the audio format is a PCM format, this event occurs just after 
                the audio device is filled a data buffer. The event notifies the 
                volume peak level of the data buffer, so a smaller buffer length 
                provides a more accurate notification mechanism.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A NAME="In2OnFormat"></A><B>OnFormat: 
                <A HREF="#TWaveAudioGetFormatEvent">TWaveAudioGetFormatEvent</A>;</B><BR>
                Occurs when the <A HREF="#In2PCMFormat">PCMFormat</A> property 
                set to <A HREF="#TPCMFormat">nonePCM</A> and component needs to 
                know about the format of the wave audio, which is going to be 
                recorded.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Methods</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                function RecordToStream(AStream: TStream): Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Records 
                wave audio to the stream specified by the AStream parameter. The 
                function returns True on success, otherwise it returns false.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                RecordToFile(const FileName: String): Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Records 
                the wave audio to the file specified by the FileName parameter. 
                The function returns True on success, otherwise it returns false. 
                </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                RecordToStock(Index: Integer): Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Recordsthe 
                wave audio to the <A HREF="#TCustomWaveStorage">TCustomWaveStorage</A> 
                component specified bt the <A HREF="#InStock">Stock</A> property. 
                If the component assigned to the <A HREF="#InStock">Stock</A> 
                property is a multi-storage component, the Index parameter specifies 
                the storage's index, otherwise the parameter will be ignored. 
                The function returns True on success, otherwise it returns false. 
                </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                Stop: Boolean;<BR>
                </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Stops 
                the current recording. The function returns True on success, otherwise 
                it returns false. </FONT></TD>
            </TR>
          </TABLE>
          <P>&nbsp;</P>
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TLiveAudioRecorder"></A>TLiveAudioRecorder 
            = class(<A HREF="#TWaveAudioIn">TWaveAudioIn</A>);</B></FONT><BR>
            <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">This component 
            records audio from the specified wave audio input device, and give 
            it to the application as data buffers.<B><BR>
            </B></FONT></P>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Active: 
                Boolean;<BR>
                </B>When set to True, the wave audio input device will be opened, 
                and audio recording starts.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Async: 
                Boolean;<BR>
                </B>Indicates whether the audio events occur in a separate thread.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferCount: 
                WORD;<BR>
                </B>Determines the number of data buffers.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferLength: 
                WORD; <BR>
                </B>Determines the size of each data buffer in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceID: 
                DWORD;<BR>
                </B>Specifies the identifier of wave audio input device. You can 
                use WAVE_MAPPER (default value) instead of a device identifier. 
                In this case, the component seleects a wave audio input device 
                capable of recording with the specified wave format.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceFormats: 
                <A HREF="#TWaveDeviceFormats">TWaveDeviceFormats</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates wave audio formats, which the selected wave audio input 
                device supports.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceName: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the freindly name of the selected wave audio input device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>NumDevs: 
                DWORD</B><B>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the number of available wave audio input devices.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastError: 
                MMRESULT; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the last system error code. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastErrorText: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the description of the last system error.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="In3PCMFormat"></A>PCMFormat: 
                <A HREF="#TPCMFormat">TPCMFormat</A>;</B><BR>
                Specifies the format of wave audio, which is going to be recorded. 
                If this property set to <A HREF="#TPCMFormat">nonePCM</A>, the 
                component generates one <A HREF="#In3OnFormat">OnFormat</A> event 
                to get the wave audio format. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Position: 
                DWORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the current position of recorded audio in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Paused: 
                Boolean;<BR>
                </B>When set to True, audio recording on the opened wave audio 
                input device is paused.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Events</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnActivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is opened.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnDeactivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is closed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnPause: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is paused.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnResume: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the wave audio input device is resumed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnError: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;</B><BR>
                Occurs when a system error is encountered. When this property 
                is not assigned and a system error occurs, the component raises 
                an <A HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</A> 
                exception.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnLevel: 
                <A HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</A>;</B><BR>
                If the audio format is a PCM format, this event occurs just after 
                the audio device is filled a data buffer. The event notifies the 
                volume peak level of the data buffer, so a smaller buffer length 
                provides a more accurate notification mechanism.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A NAME="In3OnFormat"></A><B>OnFormat: 
                <A HREF="#TWaveAudioGetFormatEvent">TWaveAudioGetFormatEvent</A>;</B><BR>
                Occurs when the <A HREF="#In3PCMFormat">PCMFormat</A> property 
                set to <A HREF="#TPCMFormat">nonePCM</A> and component needs to 
                know about the format of the wave audio, which is going to be 
                recorded.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>OnData: 
                <A HREF="#TWaveAudioDataReadyEvent">TWaveAudioDataReadyEvent</A>;</B><BR>
                Occurs when a data buffer is filled. </FONT></TD>
            </TR>
          </TABLE>
          <P>&nbsp;</P>
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TAudioRedirector"></A>TAudioRedirector 
            = class(TComponent);<BR>
            </B>This component records wave audio from an input audio device and 
            plays it on an output audio device.</FONT></P>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Active: 
                Boolean;<BR>
                </B>When set to True, the component starts recording from the 
                audio input device specified by the <A HREF="#AudioIn">AudioIn</A> 
                property, and plays in on audio autput device specified by <A HREF="#AudioOut">AudioOut</A> 
                property.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Async: 
                Boolean;<BR>
                </B>Indicates whether the audio events occur in a separate thread.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferCount: 
                WORD;<BR>
                </B>Determines the number of data buffers.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>BufferLength: 
                WORD; <BR>
                </B>Determines the size of each data buffer in milliseconds.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastError: 
                MMRESULT; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the last system error code. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>LastErrorText: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Contains the description of the last system error.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><A NAME="AudioIn"></A><B><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">AudioIn: 
                <A HREF="#TAudioInput">TAudioInput</A>;</FONT></B><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
                Represents the wave audio input device.<BR>
                Note: On Delphi 3, 4, and 5 the sub members of this property are 
                not available at design time.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><A NAME="AudioOut"></A><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>AudioOut: 
                <A HREF="#TAudioOutput">TAudioOutput</A>;<BR>
                </B>Represent the wave audio output device.<BR>
                Note: On Delphi 3, 4, and 5 the sub members of this property are 
                not available at design time. </FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Events</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnActivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the audio recording and playback is started.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnDeactivate: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;<BR>
                </B>Occurs when the audio recording and playback is stopped.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnError: 
                <A HREF="#TWaveAudioEvent">TWaveAudioEvent</A>;</B><BR>
                Occurs when a system error is encountered. When this property 
                is not assigned and a system error occurs, the component raises 
                an <A HREF="#EWaveAudioSysError%20exception">EWaveAudioSysError</A> 
                exception.</FONT></TD>
            </TR>
          </TABLE>
          <P>&nbsp;</P>
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TAudioIn"></A>TAudioIn 
            = class(<A HREF="#TWaveAudioIn">TWaveAudioIn</A>);</B></FONT><BR>
            <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">This class 
            represents and manages the audio inpiut device of the <A HREF="#TAudioRedirector">TAudioRedirector</A> 
            component.<B><BR>
            </B></FONT></P>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceID: 
                DWORD;<BR>
                </B>Specifies the identifier of wave audio input device. You can 
                use WAVE_MAPPER (default value) instead of a device identifier. 
                In this case, the component seleects a wave audio input device 
                capable of recording with the specified wave format.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceFormats: 
                <A HREF="#TWaveDeviceFormats">TWaveDeviceFormats</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates wave audio formats, which the selected wave audio input 
                device supports.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceName: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the freindly name of the selected wave audio input device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>NumDevs: 
                DWORD</B><B>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the number of available wave audio input devices.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="In4PCMFormat"></A>PCMFormat: 
                <A HREF="#TPCMFormat">TPCMFormat</A>;</B><BR>
                Specifies the format of wave audio, which is going to be recorded. 
                If this property set to <A HREF="#TPCMFormat">nonePCM</A>, the 
                component generates one <A HREF="#In4OnFormat">OnFormat</A> event 
                to get the wave audio format. </FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Events</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnLevel: 
                <A HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</A>;</B><BR>
                If the audio format is a PCM format, this event occurs just after 
                the audio input device is filled a data buffer. The event notifies 
                the volume peak level of the data buffer, so a smaller buffer 
                length provides a more accurate notification mechanism.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A NAME="In4OnFormat"></A><B>OnFormat: 
                TWaveAudioGetFormatEvent;</B><BR>
                Occurs when the <A HREF="#In4PCMFormat">PCMFormat</A> property 
                set to <A HREF="#TPCMFormat">nonePCM</A> and component needs to 
                know about the format of the wave audio, which is going to be 
                recorded.</FONT></TD>
            </TR>
          </TABLE>
          <P>&nbsp;</P>
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="TAudioOutput"></A>TAudioOut 
            = class(<A HREF="#TWaveAudioOut">TWaveAudioOut</A>);<BR>
            </B>This class represents and manages the audio output device of the 
            <A HREF="#TAudioRedirector">TAudioRedirector</A> component.<B><BR>
            </B></FONT></P>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceID: 
                DWORD;<BR>
                </B>Specifies the identifier of wave audio output device. You 
                can use WAVE_MAPPER (default value) instead of a device identifier. 
                In this case, the component seleects a wave audio output device 
                capable of playing the specified wave format.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceFormats: 
                <A HREF="#TWaveDeviceFormats">TWaveDeviceFormats</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates wave audio formats, which the selected wave audio output 
                device supports.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceName: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the freindly name of the selected wave audio output 
                device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>DeviceSupports: 
                <A HREF="#TWaveOutDeviceSupports">TWaveOutDeviceSupports</A>; 
                </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the supported features by the selected wave audio output 
                device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>NumDevs: 
                DWORD</B><B>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT><BR>
                Indicates the number of available wave audio output devices.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Options: 
                <A HREF="#TWaveOutOptions">TWaveOutOptions</A>;<BR>
                </B>Determines whether the component should initialize volume, 
                pitch, and playback rate of the opened wave out audio device with 
                their respective properties.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Pitch: 
                Double;<BR>
                </B>Specifies the pitch for the opened wave audio output device. 
                </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>PlaybackRate: 
                Double;<BR>
                </B>Specifies the playback rate for the opened wave audio output 
                device. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Volume: 
                WORD; <BR>
                </B>Specifies the volume in percent for both left and right channels 
                of the opened wave audio output device. </FONT></TD>
            </TR>
          </TABLE>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Events</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnLevel: 
                <A HREF="#TWaveAudioLevelEvent">TWaveAudioLevelEvent</A>;</B><BR>
                If the audio format is a PCM format, this event occurs just before 
                a data buffer sends to the audio output device. The event notifies 
                the volume peak level of the data buffer (after applying a filter 
                if any), so a smaller buffer length provides a more accurate notification 
                mechanism.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="OnFilter"></A>OnFilter: 
                <A HREF="#TWaveAudioFilterEvent">TWaveAudioFilterEvent</A>;</B><BR>
                Occurs just before the wave data buffer sends to the audio device. 
                The event handler may change the buffer's content, however it 
                might not change the size of the buffer.</FONT></TD>
            </TR>
          </TABLE>
          <P> 
        </TD>
      </TR>
    </TABLE>
    <BR>
  </LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="3"><A NAME="AudioMixerClasses"></A>AUDIO 
    MIXER CLASSES</FONT><FONT SIZE="2"><BR>
    <BR>
    </FONT></B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="TAudioMixer"></A>TAudioMixer 
            = class(TComponent);<BR>
            </B>This component provides an interface to manage audio mixer lines 
            and their associated controls.<BR>
            </FONT></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="DestinationCount"></A>DestinationCount: 
                WORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates 
                the number of audio line destinations available through the currently 
                selected audio mixer device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>DestinationID: 
                DWORD;</B></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                the currently selected destination line index. This member ranges 
                from zero to one less than the value specified in the <A HREF="#DestinationCount">DestinationCount</A> 
                member.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>DestinationName: 
                String;</B></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                the name of the currently selected destination line.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Handle: 
                THandle; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                the handle of the currently selected audio mixer device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>LastError: 
                MMRESULT; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Contains 
                the last system error code for the audio mixer device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> 
                <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="LineCount"></A>LineCount: 
                  WORD ; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                  <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                  the number audio line sources that are associated with the the 
                  currently selected destination line.</FONT></P>
              </TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Lines[LineID: 
                DWORD]: <A HREF="#TAudioMixerLine">TAudioMixerLine</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Provides 
                access to states and controls of the audio line sources that are 
                associated with the the currently selected destination line. The 
                LineID ranges from zero to one less than the value specified in 
                the <A HREF="#LineCount">LineCount</A> member.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="MixerMasterLine"></A>Master: 
                <A HREF="#TAudioMixerLine">TAudioMixerLine</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Provides 
                acces to states and controls of the currently selected audio destination 
                line. </FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>MixerCaps: 
                TMixerCaps; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                the record that describes the capabilities of the currently selected 
                mixer device.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="MixerCount"></A>MixerCount: 
                WORD; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates 
                the number of available mixer devices.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>MixerID: 
                DWORD;</B></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                the currently selected mixer device. This member ranges from zero 
                to one less than the value specified in the <A HREF="#MixerCount">MixerCount</A> 
                member.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>MixerName: 
                String;</B></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                the name of the currently selected mixer device..</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Event</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnLineChange: 
                <A HREF="#TMixerLineNotifyEvent">TMixerLineNotifyEvent</A>;<BR>
                </B>Occurs when the state of an audio line has changed.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>OnControlChange: 
                <A HREF="#TMixerControlNotifyEvent">TMixerControlNotifyEvent</A>;</B><BR>
                Occurs when the state of a control associated with an audio line 
                has changed.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Method</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B> 
                function FetchMixerNames(const Names: TStrings): DWORD;<BR>
                </B>Adds the name of available audio mixers to the list specified 
                by the Names parameter. The method returns the number of list 
                that are added to the list.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>function 
                FetchDestinationNames(const Names: TStrings): DWORD;<BR>
                </B>Adds the name of available destinations for the currently 
                selected audio mixer to the list specified by the Names parameter. 
                The method returns the number of list that are added to the list.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
                FindMixerLine(ComponentType: <A HREF="#TMixerLineComponentType">TMixerLineComponentType</A>; 
                out ADestinationID, ALineID: Integer): Boolean;<BR>
                </B>Searches through audio lines of all destinations available 
                for the currently select audio mixer to find an audio line, which 
                maches to the specified component type.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="TAudioMixerLine"></A>TAudioMixerLine 
            = class(TObject);<BR>
            </B>This class encapsulates controls and information associated to 
            an audio line.<BR>
            </FONT></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>AvailableControls: 
                <A HREF="#TMixerControlTypes">TMixerControlTypes</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates 
                the controls that are available through the audio line.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>ComponentType: 
                <A HREF="#TMixerLineComponentType">TMixerLineComponentType</A>; 
                </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                the component type for this audio line..</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Flags: 
                <A HREF="#TMixerLineFlags">TMixerLineFlags</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                the s</FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">tatus 
                and support flags for the audio line</FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> 
                <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>ID: 
                  Integer; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                  <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates 
                  the index of the audio line.</FONT></P>
              </TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>LastError: 
                MMRESULT; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Contains 
                the last system error code for the audio line.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Mixer: 
                <A HREF="#TAudioMixer">TAudioMixer</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                the mixer device of the audio line.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Mute: 
                Boolean;</B></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates 
                whether the line output is mute.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Name: 
                String; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                the name of the audio line.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>SelectedLine: 
                Integer;</B></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">For 
                a destination audio line (<A HREF="#MixerMasterLine">Master</A>), 
                indicates which source audio line is selected for recording.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>TargetType: 
                <A HREF="#TMixerLineTargetType">TMixerLineTargetType</A>; </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                the target media device type associated with the audio line..</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Volume: 
                Integer;</B></FONT><BR>
                <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                volume level of the audio line in precent.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><BR>
    </B> </FONT> <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="3"><A NAME="TimerClass"></A>MULTIMEDIA 
    TIMER CLASS</FONT><FONT SIZE="2"><BR>
    <BR>
    </FONT></B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="TMultimediaTimer"></A>TMultimediaTimer 
            = class(TComponent);<BR>
            </B>This component is a wrapper to the Windows' Multimedia Timer, 
            which is a high resolution thread base timer.<BR>
            </FONT></P>
          <P> 
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Properties</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>Enabled: 
                Boolean;<BR>
                </B>Controls whether the timer generates OnTimer events periodically.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>Interval: 
                WORD; </B><BR>
                Determines the amount of time, in milliseconds, that passes before 
                the component initiates another OnTimer event.</FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2">Resolution: 
                WORD;</FONT></B><FONT SIZE="2"><BR>
                Specifies the minimum timer resolution, in milliseconds. For example, 
                if you specify a resolution of 5 and an interval of 100, the timer 
                services </FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">generates 
                OnTimer event</FONT><FONT SIZE="2"> after an interval ranging 
                from 95 to 105 milliseconds.</FONT></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> 
                <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>TimerID: 
                  Integer</B></FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>; 
                  </B><FONT COLOR="#990000"><SUP>(Read-Only)</SUP></FONT></FONT><BR>
                  <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Indicates 
                  the timer identifier when it is active, otherwise it is zero.</FONT></P>
              </TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Event</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>OnTimer: 
                TNotifyEvent;<BR>
                </B>Occurs when a specified amount of time, determined by the 
                Interval property, has passed.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
          <TABLE WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <TR> 
              <TD COLSPAN="2" BGCOLOR="#660000"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF"><B>Key 
                Method</B></FONT></TD>
            </TR>
            <TR> 
              <TD COLSPAN="2"> <FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><B>class 
                function TimerCaps: TTimeCaps;<BR>
                </B>Returnes capabilities of the Windows' Multimedia Timer, which 
                are the minimum and maximum supported resolution for the timer.</FONT></TD>
            </TR>
          </TABLE>
          <BR>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2"><BR>
    </FONT></B><BR>
    </FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><A NAME="GlobalProcedures"></A><B><FONT SIZE="3">GLOBAL 
    PROCEDURES </FONT><FONT SIZE="2"><BR>
    <BR>
    </FONT></B> </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
            GetWaveAudioInfo(mmIO: HMMIO; out pWaveFormat: PWaveFormatEx; var 
            DataSize, DataOffset: DWORD): Boolean;<BR>
            </B>Retrieves format, size, and offset of the wave audio for an open 
            mmIO handle. On success when the the function returns true, it is 
            the caller responsibility to free the memory allocated for the Wave 
            Format structure via FreeMem procedure.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
          CreateWaveAudio(mmIO: HMMIO; const pWaveFormat: PWaveFormatEx; out ckRIFF, 
          ckData: TMMCKInfo): Boolean;</B><BR>
          Initializes a wave RIFF format in an open mmIO handle. The previous 
          content of the mmIO will be lost.</FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>CloseWaveAudio(mmIO: 
          HMMIO; var ckRIFF, ckData: TMMCKInfo);</B><BR>
          Updates the chunks and closes an mmIO handle;</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
            GetStreamWaveAudioInfo(Stream: TStream; out pWaveFormat: PWaveFormatEx; 
            out DataSize, DataOffset: DWORD): Boolean;<BR>
            </B>Retrieves format, size, and offset of the wave audio for a stream. 
            On success when the the function returns true, it is the caller responsibility 
            to free the memory allocated for the Wave Format structure via FreeMem 
            procedure.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
            CreateStreamWaveAudio(Stream: TStream; const pWaveFormat: PWaveFormatEx; 
            out ckRIFF, ckData: TMMCKInfo): HMMIO;<BR>
            </B>Initializes wave RIFF format in a stream and returns the mmIO 
            handle. After calling this function, the previous content of the stream 
            will be lost.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
            OpenStreamWaveAudio(Stream: TStream): HMMIO ;<BR>
            </B>Opens wave RIFF format in a stream for read and write operations 
            and returns the mmIO handle.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="CalcWaveBufferSize"></A>function 
          CalcWaveBufferSize(const pWaveFormat: PWaveFormatEx; Duration: DWORD): 
          DWORD;</B><BR>
          Returns the number of bytes required to store wave data for the specified 
          wave format and duration in milliseconds.</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
          GetWaveAudioFormat(const pWaveFormat: PWaveFormatEx): String;</B><BR>
          Returns the string representation of a wave audio format.</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
          GetWaveAudioLength(const pWaveFormat: PWaveFormatEx; DataSize: DWORD): 
          DWORD;</B><BR>
          Returns the wave's length in milliseconds.</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
          GetWaveAudioBitRate(const pWaveFormat: PWaveFormatEx): DWORD;</B><BR>
          Returns the wave's bit rate in kbps (kilo bits per socond).</FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
          GetWaveAudioPeakLevel(const Data: Pointer; DataSize: DWORD; BitsPerSample: 
          WORD): Integer;</B><BR>
          Returns the volume peak level in percent of the specified wave data 
          (PCM format only). If the function fails, it returns -1.</FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>procedure 
          InvertWaveAudio(const Data: Pointer; DataSize: DWORD; BitsPerSample: 
          WORD);</B><BR>
          Reverses the direction of the wave audio (PCM format only).</FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><A NAME="SilenceWaveAudio"></A><B>procedure 
          SilenceWaveAudio(const Data: Pointer; DataSize: DWORD; BitsPerSample: 
          WORD);</B><BR>
          Fills the specified buffer with the silence data (PCM format only).</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>procedure 
          ChangeWaveAudioVolume(const Data: Pointer; DataSize: DWORD; BitsPerSample: 
          WORD; Percent: Integer);</B><BR>
          Increases or decreases the wave data volume by the specified percentage 
          (PCM format only).</FONT></TD>
      </TR>
    </TABLE>
    <BR>
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><A NAME="ConvertWaveFormat"></A>function 
          ConvertWaveFormat(const srcFormat: PWaveFormatEx; srcData: Pointer; 
          srcDataSize: DWORD; const dstFormat: PWaveFormatEx; out dstData: Pointer; 
          out dstDataSize: DWORD): Boolean;<BR>
          </B>Converts the format of a waveform audio. If the function succeeds 
          and returns True, it is the caller's responsiblity to release the memory 
          allocated for the output wave data buffer via ReallocMem procedure. 
          <BR>
          For more information, please read <A HREF="http://msdn.microsoft.com/library/default.asp?url=/library/en-us/multimed/htm/_win32_multistep_format_conversion.asp">Multistep 
          Format Conversion</A> on MSDN. </FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>procedure 
          SetPCMAudioFormat(const pWaveFormat: PWaveFormatEx; Channels: <A HREF="#TPCMChannel">TPCMChannel</A>; 
          SamplesPerSec: <A HREF="#TPCMSamplesPerSec">TPCMSamplesPerSec</A>; BitsPerSample: 
          <A HREF="#TPCMBitsPerSample">TPCMBitsPerSample</A>);<BR>
          </B>Initializes a standard PCM wave format header. The size of memory 
          referenced by the pWaveFormat parameter must not be less than the size 
          of TWaveFormatEx record.</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>procedure 
          SetPCMAudioFormatS(const pWaveFormat: PWaveFormatEx; PCMFormat: <A HREF="#TPCMFormat">TPCMFormat</A>);</B><BR>
          Initializes a standard PCM wave format header (shorcut form). The size 
          of memory referenced by the pWaveFormat parameter must not be less than 
          the size of TWaveFormatEx record.</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
          GetPCMAudioFormat(const pWaveFormat: PWaveFormatEx): <A HREF="#TPCMFormat">TPCMFormat</A>;</B><BR>
          Returns the standard PCM format specifier of a wave format.</FONT></TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"> 
          <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
            MS2Str(Milliseconds: DWORD; Fmt: <A HREF="#TMS2StrFormat">TMS2StrFormat</A>): 
            String;</B><BR>
            Converts milliseconds to string.</FONT></P>
        </TD>
      </TR>
    </TABLE>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT> 
    <TABLE WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <TR> 
        <TD WIDTH="15">&nbsp;</TD>
        <TD BGCOLOR="#EEEEEE"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B>function 
          mmioStreamProc(lpmmIOInfo: PMMIOInfo; uMsg, lParam1, lParam2: DWORD): 
          LRESULT; stdcall;</B><BR>
          User defined mmIOProc to handle Delphi;s streams by Windows' mmIO API 
          functions.<BR>
          <BR>
          To open a stream using mmIO API functions, use the following code as 
          sample:<BR>
          <BR>
          <FONT COLOR="#006600">FillChar(mmioInfo, SizeOf(mmioInfo), 0);<BR>
          mmioInfo.pIOProc := @mmioStreamProc;<BR>
          mmioInfo.adwInfo[0] := DWORD(<FONT COLOR="#990000">your_stream_instance</FONT>);<BR>
          mmIO := mmioOpen(nil, @mmioInfo, dwOpenFlags);</FONT><FONT COLOR="#006633"><BR>
          </FONT><BR>
          The flags specified by the dwOpenFlags parameter of mmioOpen function 
          can be only one of MMIO_READ, MMIO_WRITE, and MMIO_READWRITE flags. 
          If you use another flags, they will be ignored by this user defined 
          function.</FONT></TD>
      </TR>
    </TABLE>
  </LI>
</UL>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="HISTORY"></A><BR>
  <FONT SIZE="4">HISTORY</FONT></B></FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><B><BR>
  </B></FONT> </P>
<UL>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Version 
    1.601 (November 25, 2004)<BR>
    </FONT></B></FONT></B></FONT></B></FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- 
    A minor bug in <A HREF="#TWaveAudioOut">TWaveAudioOut</A> class fixed.</FONT></FONT></FONT></FONT><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    <BR>
    </FONT></FONT></B></FONT></B></FONT></B></FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Version 
    1.60 (September 23, 2004)<BR>
    </FONT></B></FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- 
    The new <I>Async</I> property added to the interface of <A HREF="#WaveAudioPlayerRecorderClasses">players</A>, 
    <A HREF="#WaveAudioPlayerRecorderClasses">recorders</A>, and <A HREF="#WaveAudioPlayerRecorderClasses">redirector</A> 
    components. When this property is True, the events occur in a separate thread, 
    so the event handlers should be thread-safe.</FONT></FONT><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT></FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- 
    The new <A HREF="#WaitForStart">WaitForStart</A> method added to the interface 
    of <A HREF="#TWaveAudioIO">TWaveAudioIO</A> component.<BR>
    </FONT></FONT><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    </FONT></B></FONT></B></FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B></B><FONT SIZE="2"></FONT></FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Version 
    1.53 (August 9, 2004)<BR>
    </FONT></B><FONT SIZE="2">- <A HREF="#CalcWaveBufferSize">CalcWaveBufferSize</A> 
    and <A HREF="#SilenceWaveAudio">SilenceWaveAudio</A></FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
    added to the list of global procedures.<BR>
    - Some minor tweaks<BR>
    - A TCP Client/Server set of applications included in the package to show 
    how to use <A HREF="#TLiveAudioPlayer">TLiveAudioPlayer</A> and <A HREF="#TLiveAudioRecorder">TLiveAudioRecorder</A> 
    components. The programs use Delphi's TServerSocket and TClientSocket for 
    TCP connection.<BR>
    </FONT></FONT><BR>
  </LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Version 
    1.521 (January 19, 2004)</FONT></B></FONT><BR>
    <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- Some minor tweaks</FONT><BR>
    <BR>
  </LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Version 
    1.52 (January 15, 2004)<BR>
    </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- A 
    minor bug in wave manipulation methods of <A HREF="#TWave">TWave</A> class 
    fixed.</FONT><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    <BR>
    </FONT></B></FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
    Version 1.51 (December 8, 2003)<BR>
    </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- The 
    <A HREF="#ConvertWaveFormat">ConvertWaveFormat</A> procedure fully implemented.</FONT><B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><BR>
    <BR>
    </FONT></B></FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2">Version 
    1.50 (December 7, 2003)<BR>
    </FONT></B><FONT SIZE="2">- New component <A HREF="#TAudioMixer">TAudioMixer</A> 
    added to the package.</FONT><B><FONT SIZE="2"><BR>
    </FONT></B><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">- Some 
    new propeties and methods added to the <A HREF="#TWave">TWave</A> class.<BR>
    - New <A HREF="#TWaveAudioLevelEvent">OnLevel</A> event added to all audio 
    playback and recording components.<BR>
    - New <A HREF="#OnFilter">OnFilter</A> event added to the <A HREF="#AudioOut">TAudioRedirector.AudioOut</A> 
    sub component property.<BR>
    </FONT><FONT SIZE="2">- Some new </FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><A HREF="#GlobalProcedures">Global 
    Procedures</A> added.<BR>
    </FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
    </FONT><B><FONT SIZE="2">Version 1.02 (August 10, 2003)<BR>
    </FONT></B><FONT SIZE="2">- </FONT><FONT SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Bug 
    fix: On Delphi 3 the definition of TPCMWaveFormat is wrong, and because of 
    that some components could not reterive the wave format of the wave to playback. 
    <BR>
    </FONT><B><BR>
    </B></FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><FONT SIZE="2">Version 
    1.01 (August 10, 2003)<BR>
    </FONT></B><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">- </FONT><FONT SIZE="2">The 
    package's documentation (</FONT><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">this 
    file) updated</FONT><FONT SIZE="2">.</FONT><B><BR>
    <BR>
    </B></FONT></LI>
  <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B> <FONT SIZE="2">Version 
    1.0 (July 19, 2003)</FONT></B><FONT SIZE="2"><BR>
    - Initial release to public domain.</FONT></FONT> </LI>
</UL>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="4"><B><A NAME="ACKNOWLEDGMENT"></A><BR>
  ACKNOWLEDGMENT</B></FONT></P>
<BLOCKQUOTE> 
  <P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Special thanks 
    to:</FONT> </P>
  <UL>
    <LI><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Inprise &lt;?&gt; 
      for his help on wave format conversion.</FONT><BR>
    </LI>
  </UL>
</BLOCKQUOTE>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="LICENSE"></A><BR>
  <FONT SIZE="4">LICENSE</FONT></B></FONT></P>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The Wave Audio 
  Package is freeware. You may copy package's files AS LONG AS YOU COPY ALL OF 
  THEM. If you want to change the source code in order to improve the components' 
  features, performance, etc. please send me the new source code so that I can 
  have a look at it. The changed source code should contain descriptions what 
  you have changed, and of course your name. The only thing you MAY NOT CHANGE 
  is the ORIGINAL COPYRIGHT INFORMATION. </FONT> 
<P></P>
<P><FONT FACE="Verdana, Arial, Helvetica, sans-serif"><B><A NAME="DISCLAIMER"></A><BR>
  </B> <B> <FONT SIZE="4">DISCLAIMER</FONT></B></FONT></P>
<P> <FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The Wave Audio 
  Package is provided &quot;AS IS&quot; without any warranty of any kind, either 
  express or implied. The entire risk as to the quality and performance of the 
  software is with you. The author is NOT liable for any DAMAGES resulting from 
  the use and misuse of the package, especially he is NOT liable for DAMAGES that 
  were caused BY ANY VERSION WHICH HAS NOT BEEN PROGRAMMED BY THE AUTHOR HIMSELF.</FONT></P>
<FONT FACE="Verdana, Arial, Helvetica, sans-serif"><BR>
</FONT> 
<TABLE WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0">
  <TR> 
    <TD WIDTH="100%"> 
      <HR NOSHADE>
    </TD>
    <TD NOWRAP><FONT FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="1"><SUP>&nbsp;END 
      OF DOCUMENT</SUP></FONT></TD>
  </TR>
</TABLE>
</BODY>
</HTML>
